import matplotlib.pyplot as plt
import pandas as pd
import numpy as np

# HAMBASTEGI 90
Rain_90=[38.890840215107374, 6.762213468803369, 13.614843076719158, 57.20793000252632, 61.85741421069473, 42.89293530947368, 68.76701035806316, 47.35780555816421, 29.806787376090945, 13.159306821933473, 36.267903597372644, 27.221452984117892]
Evap_90=[17.187455866266948, 12.938966346543157, 6.710617553714527, 10.412338292261051, 18.37635814746947, 33.15508012375579, 52.938177116665265, 74.5802504624842, 60.53743752586105, 32.017764080842106, 26.62291444759579, 23.8289286549221]
Temp_90=[14.965955122807031, 7.873955754385918, 4.819024947368462, -1.106801298245614, -0.6535126666666997, 3.945167859649132, 11.315524280701766, 16.647848771929773, 21.344744877193023, 24.463766140350856, 22.413458877192966, 18.466158210526316]

plt.scatter(Evap_90, Temp_90, marker='o')  # dama & tabkh-taarogh
plt.xlabel("Evap (kg/m2*s)")
plt.ylabel("Temp (k)")
plt.show()

plt.scatter(Rain_90, Temp_90, marker='o')
plt.xlabel("Rain (kg/m2*s)")
plt.ylabel("Temp (k)")
plt.show()

plt.scatter(Rain_90, Evap_90, marker='o')
plt.xlabel("Rain (kg/m2*s)")
plt.ylabel("Evap (kg/m2*s)")
plt.show()

catchment90=[883.9791780701755, 883.5718881754385, 883.0940785614034, 882.6613252280702, 883.1565136491228, 884.0627693684211, 884.4782661754386, 884.7748619999999, 884.3576980701754, 883.6138418596491, 883.1786748421051, 884.9914023508773, 884.5810369473685, 883.6692687017543, 882.9132295789473, 882.1074852982456, 881.3661359298245, 880.9103409122806, 880.5968578245613, 879.9438581052633, 879.260347122807, 878.7174063508772, 879.2021336842106, 879.1099307017544, 878.8462948070176, 879.2161608070176, 880.074693614035, 880.3117328070175, 879.6734997192983, 879.2553240701754, 880.7475784561403, 882.6443425614035, 885.081509368421, 885.2527601052632, 884.5864667368421, 883.8133551929824, 883.0192734035087, 882.2161470526315, 881.4195324561404, 880.6912187017543, 879.9497276491228, 879.2828055087718, 878.6853430877193, 878.0772318596493, 877.4763267017544, 876.8937624561404, 876.3660450526316, 875.8461007017544, 875.2960988070176, 874.8332287719298, 874.4511987719299, 874.0594429473684, 873.7211754385964, 873.4748715087718, 873.1734820701755, 872.6928675438597, 872.1496816140351, 871.6307743157895, 871.147067859649, 870.8306712280702, 870.4271134385966, 869.944154877193, 869.5688338947368, 869.3355153333333, 869.1431791578948, 868.910972877193, 868.6226882105263, 868.4214593333334, 868.2392950877191, 867.9936667368421, 867.7300920701754, 867.4021242807016, 867.618216982456, 870.1582355087719, 871.2005387719298, 870.913872631579, 870.4440640350878, 869.9830638245614, 870.0692113333333, 870.2042125964912, 869.9767887719298, 869.8452497543859, 869.6080627017544, 869.3659249122807, 869.1153567017544, 868.862500877193, 868.5814675438596, 868.2535150175438, 867.9098328070176, 867.5705981403509, 867.2260139298245, 867.1157707719298, 868.5838172280702, 868.9834648771929, 868.916352, 868.8553750175438, 869.8546935438598, 870.9077607017543, 871.147131368421, 871.4557467719297, 873.3854221754385, 878.3517087368422, 880.483203754386, 881.4696290877192, 881.3712595438595, 880.8938161052632, 881.3787350526316, 884.5148053684211, 885.0696300000001, 884.6886718947369, 884.3121788070175, 884.202842140351, 883.9441449122806, 883.6535869473685, 883.2763652280701, 882.7980221754386, 882.244584877193, 881.9896253333333, 881.8656165614035, 882.003765614035, 883.0294112280702, 885.0778794736841, 886.5531935789473, 888.1664289122807, 890.612619263158, 895.6574893333334, 896.9853250175439, 896.9742188070176, 896.4650367719298, 895.9327724912281, 896.2151728070176, 895.9814679649122, 895.5982878947368, 896.503672491228, 899.1725830877193, 898.9440795087719, 898.5056060000001, 898.2848006666667, 899.4023397192982, 901.095966982456, 901.432707368421, 901.3100658947368, 901.7774230175439, 903.223285614035, 904.9763505263159, 905.4724424912281, 906.1477484210526, 906.5879845614035, 907.4374450526316, 909.8059623157895, 910.365821263158, 911.5106812280702, 912.6340651929825, 913.4276861403508, 913.7373810526316, 913.6760836842107, 913.5663341228071, 912.6007349122807, 913.4565845614036, 915.2551941052633, 916.4713079999999, 917.0112692982456, 917.2998744912281, 920.423894877193, 925.9109958947369, 927.4428074736843, 926.8344736491227, 926.0018493333333, 925.1526407719298, 924.2661063508772, 923.4003275438596, 922.7890366666668, 922.3365612280702, 923.6734509824563, 924.9512601403509, 924.9341349473684, 924.8724802807019, 924.2202184210526, 923.3547104210526, 922.7877011578946, 922.2356041403508, 921.5657833684211, 921.0382320350877, 920.7995137894738, 920.684616245614, 921.2251992982457, 923.337352877193, 925.805069894737, 926.276867263158, 926.8417606666668, 927.0314029473685, 926.8443523859651, 926.843570877193, 927.2861629473684, 927.795111263158, 927.5897903859648, 927.1383856140351, 926.4546944210526, 925.9149479649124, 925.5362813333334, 924.9565412982457, 924.4141562807018, 924.7267568771931, 928.2411466315789, 930.3922168070175, 930.5548017894739, 931.3698353684211, 933.3286682456139, 935.6385630526316, 935.8220744210528, 935.3288849122806, 936.0274843157894, 937.786372140351, 938.1256498245614, 938.3958925614036, 939.6541297894737, 939.8870703157895, 939.1283545964912, 939.3687485964914, 940.9612126315789, 941.6272679298246, 941.9865717543861, 941.4871681403507, 940.5376294385967, 939.142170631579, 938.4693256140351, 938.4478346666668, 937.7284270526317, 937.4548974736841, 937.8115131929823, 938.8430508771929, 938.3578760350877, 937.5430752631579, 937.06868677193, 937.2033311929823, 937.3575621403509, 936.9804934736844, 936.5117476842105, 936.453604, 936.7195244210527, 935.8840205263159, 935.0018562807018, 934.042445754386, 932.8304255789473, 931.7076647719299, 930.7376436491227, 929.9328418947368, 929.0700802105263, 928.5579999649121, 927.9198405614035, 927.2225249824561, 927.2265221052631, 926.6913191929823, 925.9465943157895, 925.1713245263157, 924.7859123508773, 924.1812542105263, 923.447244140351, 922.4662287017543, 921.4679228771929, 920.5171732280702, 919.5236556491228, 918.442857263158, 917.4660203157896, 916.9518327017544, 918.3010123508772, 919.704018, 919.1213649122807, 917.8488674035087, 916.4812874736842, 915.1872092982456, 914.023833508772, 912.8930932982457, 911.9222798947369, 911.0533996140351, 910.1742397192982, 909.3116001754387, 908.4148081052632, 907.5787514035088, 906.6537253684211, 905.7023420701754, 904.8725575438597, 904.0640687719299, 903.4437567719298, 903.0500172631579, 902.5425661052633, 901.9615289824561, 901.3178132280701, 900.7326959298246, 900.0867954035087, 899.356636877193, 898.7289311929825, 898.4483659649122, 898.1214029824562, 897.5238583508772, 896.9718860350877, 896.5255536491228, 895.9566781754386, 895.2271864210526, 894.4635618596491, 893.6583854385964, 892.844342736842, 892.0305842105263, 891.1982891228071, 890.388856877193, 889.5706930175438, 888.7558425964912, 888.015485263158, 887.4693587719297, 887.3214251228071, 887.7310289824561, 888.3939915789473, 889.5870954035087, 890.7726403859649, 890.7458988070175, 890.0211179649123, 889.219595754386, 888.2962869122807, 887.4487195438596, 886.610101859649, 885.7640349122807, 885.0807491578947, 884.5209941052632, 884.1382740350878, 883.7378287368422, 883.3074551929824, 883.0463183508772, 883.7888971929824, 884.9259004561403, 886.3700761052633, 887.3043717894736, 888.7270003157895, 890.2378099298246, 889.4365033684211, 888.3486291929825, 887.2421410526315, 886.1244201754386, 885.0253575438596, 883.950669508772, 882.9944004561404, 882.738651122807, 882.9494225614035, 882.4444416140351, 881.4779682105263, 880.4607572982457, 880.2094647017544, 880.0022474035088, 879.5101019298245, 879.1181123508771, 878.6230545614035, 878.0047307719299, 877.3720025263158, 876.7368096842106, 876.2464902105263, 876.5840608070175, 877.1069400701754, 877.244958877193, 876.351304491228, 875.5945377894736, 874.9146158596491, 876.9196107017544, 879.0155310526316, 880.5030383157894, 880.0070192280701, 879.2813158596492]
# print(len(catchment90))
A1=np.average(catchment90[:31])
A2=np.average(catchment90[31:61])
A3=np.average(catchment90[61:91])
A4=np.average(catchment90[91:121])
A5=np.average(catchment90[121:151])
A6=np.average(catchment90[151:181])
A7=np.average(catchment90[181:211])
A8=np.average(catchment90[211:241])
A9=np.average(catchment90[241:271])
A10=np.average(catchment90[271:301])
A11=np.average(catchment90[301:331])
A12=np.average(catchment90[331:365])
catchment90_monthly=[A1,A2,A3,A4,A5,A6,A7,A8,A9,A10,A11,A12]
print(catchment90_monthly)

plt.scatter(Rain_90, catchment90_monthly, marker='o')
plt.xlabel("Rain (kg/m2*s)")
plt.ylabel("storage (mm)")
plt.show()

